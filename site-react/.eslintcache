[{"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\index.js":"1","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\App.js":"2","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\pthonds\\PythonDs.js":"3","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\context\\UserContext.js":"4","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\projects\\Projects.js":"5","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\context\\ProfileContext.js":"6","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\resume\\Resume.js":"7","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\skills\\SkillCloud.js":"8","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\FloatingActions.js":"9","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\navbar\\NavBar.js":"10","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\skills\\SkillSearch.js":"11","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\experience\\Experience.js":"12","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\Feedback.js":"13","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\resume-service.js":"14","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\feedback-service.js":"15","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\errordialog\\ErrorDialog.js":"16","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\navbar\\SwipeableTemporaryDrawer.js":"17","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\contact\\Contact.js":"18","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\signin\\SignIn.js":"19","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\experience\\Project.js":"20","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\apis\\axiosConfig.js":"21","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\controls\\SpinnerButton.js":"22","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\editor\\TextEditor.js":"23","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\signin\\SignInService.js":"24","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\styling\\themes\\dark.js":"25","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\BlogPosts.js":"26","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\BlogPost.js":"27","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\Blog.js":"28","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\skeletons\\SkeletonBlogPost.js":"29","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\context\\BlogContext.js":"30","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\projects\\useProjectStyles.js":"31","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\useBlogStyles.js":"32","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\experience\\useExperienceStyles.js":"33"},{"size":131,"mtime":1611606941056,"results":"34","hashOfConfig":"35"},{"size":1619,"mtime":1614699212288,"results":"36","hashOfConfig":"35"},{"size":301,"mtime":1614009168572,"results":"37","hashOfConfig":"35"},{"size":1253,"mtime":1613760701494,"results":"38","hashOfConfig":"35"},{"size":2789,"mtime":1614700908137,"results":"39","hashOfConfig":"35"},{"size":478,"mtime":1614009026672,"results":"40","hashOfConfig":"35"},{"size":556,"mtime":1614009026680,"results":"41","hashOfConfig":"35"},{"size":2704,"mtime":1614296027823,"results":"42","hashOfConfig":"35"},{"size":4935,"mtime":1613742720732,"results":"43","hashOfConfig":"35"},{"size":5575,"mtime":1614009035066,"results":"44","hashOfConfig":"35"},{"size":1411,"mtime":1611606941061,"results":"45","hashOfConfig":"35"},{"size":1793,"mtime":1614711568963,"results":"46","hashOfConfig":"35"},{"size":1775,"mtime":1612385254471,"results":"47","hashOfConfig":"35"},{"size":995,"mtime":1612903695144,"results":"48","hashOfConfig":"35"},{"size":220,"mtime":1612382521042,"results":"49","hashOfConfig":"35"},{"size":1342,"mtime":1613492508770,"results":"50","hashOfConfig":"35"},{"size":3910,"mtime":1613492508779,"results":"51","hashOfConfig":"35"},{"size":4364,"mtime":1611874254147,"results":"52","hashOfConfig":"35"},{"size":4490,"mtime":1614009035075,"results":"53","hashOfConfig":"35"},{"size":672,"mtime":1614711561957,"results":"54","hashOfConfig":"35"},{"size":129,"mtime":1612897189525,"results":"55","hashOfConfig":"35"},{"size":1477,"mtime":1613603886648,"results":"56","hashOfConfig":"35"},{"size":1054,"mtime":1613742720728,"results":"57","hashOfConfig":"35"},{"size":228,"mtime":1613492508805,"results":"58","hashOfConfig":"35"},{"size":564,"mtime":1614379264244,"results":"59","hashOfConfig":"35"},{"size":1813,"mtime":1614701430886,"results":"60","hashOfConfig":"35"},{"size":7383,"mtime":1614700955818,"results":"61","hashOfConfig":"35"},{"size":411,"mtime":1614698723476,"results":"62","hashOfConfig":"35"},{"size":2576,"mtime":1614698355807,"results":"63","hashOfConfig":"35"},{"size":2637,"mtime":1614698590002,"results":"64","hashOfConfig":"35"},{"size":1146,"mtime":1614700920033,"results":"65","hashOfConfig":"35"},{"size":983,"mtime":1614700954491,"results":"66","hashOfConfig":"35"},{"size":768,"mtime":1614711508657,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"6pokzp",{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\index.js",[],["140","141"],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\App.js",["142","143","144","145"],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\pthonds\\PythonDs.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\context\\UserContext.js",["146"],"import React, { useEffect, useState } from 'react'; \r\n\r\nconst defaultProviderValue = {\r\n  user: 'Guest',\r\n  token: '',\r\n  modifyNameAndToken: ()=> {},\r\n  isLoggedIn: ()=> {},\r\n  logout: ()=> {}\r\n};\r\n\r\nconst UserContext = React.createContext(defaultProviderValue);\r\n\r\nexport const UserContextProvider = ({children}) => {\r\n  const [name, setName] = useState(defaultProviderValue);\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('token');\r\n    token = token ? token : \"\";\r\n    \r\n    if (token !== \"\"){\r\n      modifyNameAndToken('admin',token);\r\n    }\r\n  },[]); \r\n\r\n  const modifyNameAndToken = (user,token) => { \r\n    setName({ ...name, \r\n      user: user,\r\n      token:  token\r\n    }); \r\n  };\r\n\r\n  const isLoggedIn = () => {\r\n    const isAdminAndLoggedIn =  name.user.toUpperCase() === 'ADMIN' &&  name.token  && name.token !== \"null\"\r\n    return isAdminAndLoggedIn;\r\n  }\r\n\r\n  const logout = () => {\r\n    setName({ ...name, \r\n      user: 'Guest',\r\n      token:  ''\r\n    }); \r\n    localStorage.setItem('token',\"\");\r\n  }\r\n\r\n  return(\r\n    <UserContext.Provider value={{\r\n      ...name,\r\n      modifyNameAndToken,\r\n      isLoggedIn,\r\n      logout\r\n    }}>\r\n      {children}\r\n    </UserContext.Provider> \r\n  );\r\n};\r\n\r\nexport default UserContext;","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\projects\\Projects.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\context\\ProfileContext.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\resume\\Resume.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\skills\\SkillCloud.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\FloatingActions.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\navbar\\NavBar.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\skills\\SkillSearch.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\experience\\Experience.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\Feedback.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\resume-service.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\floatingactions\\feedback-service.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\errordialog\\ErrorDialog.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\navbar\\SwipeableTemporaryDrawer.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\contact\\Contact.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\signin\\SignIn.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\experience\\Project.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\apis\\axiosConfig.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\controls\\SpinnerButton.js",["147"],"import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button'; \r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core'; \r\nimport { green } from '@material-ui/core/colors'; \r\n\r\nconst useStyles= makeStyles((theme)=>({\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    '&:hover': {\r\n      backgroundColor: green[700],\r\n    },\r\n  },wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst SpinnerButton = ( {buttonProps} ) => {\r\n  const { text, onClick, loading } = buttonProps; \r\n  const [success, setSuccess] = useState(false);\r\n  const classes = useStyles(); \r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const onButtonClick = () => { \r\n    // Parent has the functionality of onclick\r\n    onClick();\r\n  }\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Button \r\n        color=\"primary\" \r\n        variant=\"contained\" \r\n        className={buttonClassname}\r\n        disabled={loading}\r\n        onClick={onButtonClick}>\r\n        {text}\r\n      </Button>\r\n      {\r\n        loading && \r\n        <CircularProgress size={24} className={classes.buttonProgress} />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport  default SpinnerButton;","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\editor\\TextEditor.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\signin\\SignInService.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\styling\\themes\\dark.js",["148","149","150","151","152"],"import { createMuiTheme, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport { green, purple,red } from '@material-ui/core/colors';\r\n\r\nconst dark = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    // primary: {\r\n    //   // Purple and green play nicely together.\r\n    //   main: red[500],\r\n    // },\r\n    // secondary: {\r\n    //   // This is green.A700 as hex.\r\n    //   main: '#11cb5f',\r\n    // },\r\n    // test: {\r\n    //   // Purple and green play nicely together. \r\n    //   background: 'red',\r\n    // }\r\n  },\r\n});\r\n\r\nexport default dark;","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\BlogPosts.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\BlogPost.js",["153"],"import React, { useState,useContext } from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader'; \r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';  \r\nimport Typography from '@material-ui/core/Typography'; \r\nimport TextEditor from '../common/components/editor/TextEditor';\r\nimport { ButtonGroup, IconButton } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport TextField from '@material-ui/core/TextField';  \r\nimport UserContext from '../context/UserContext';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport SpinnerButton from '../common/components/controls/SpinnerButton'; \r\nimport { useFormik } from 'formik';  \r\nimport BlogContext from '../context/BlogContext';\r\nimport blogStyles from './blogStyles';  \r\n \r\nconst BlogPost = (props) => {   \r\n    const userContextValue = useContext(UserContext);\r\n    const blogContext = useContext(BlogContext); \r\n    const [editClicked, setEditClicked] = useState(false);    \r\n    const [postComment, setPostComment] = useState('');\r\n    const [postCommentLoading, setPostCommentLoading] = useState(false);\r\n    const classes = blogStyles();\r\n\r\n    // Parent events\r\n    const {item } = props; \r\n\r\n    const formik = useFormik({\r\n      initialValues: {\r\n        title: item.title,\r\n        subTitle: item.subTitle,\r\n        content: item.content\r\n      },\r\n      onSubmit: (values) => {\r\n        console.log(values);\r\n      }\r\n    });\r\n \r\n    const getForm = () => {\r\n      return (\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Card  > \r\n            <CardHeader\r\n                className={classes.contactHeader}\r\n                title={\r\n                  <React.Fragment>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"postTitle\"\r\n                      label=\"title\"\r\n                      name = \"title\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      value={formik.values.title}\r\n                      onChange={formik.handleChange}\r\n                    />   \r\n                    <TextField \r\n                      margin=\"dense\"\r\n                      name= \"subTitle\"\r\n                      id=\"postSubTitle\"\r\n                      label=\"subTitle\"\r\n                      type=\"text\"\r\n                      fullWidth\r\n                      value={formik.values.subTitle}\r\n                      onChange={formik.handleChange}\r\n                    />                      \r\n                  </React.Fragment>    \r\n                }  \r\n                action={titleCrudButtonMarkup()}\r\n            /> \r\n            <CardContent>  \r\n              <div id=\"container\">\r\n                <TextEditor post={item} /> \r\n              </div> \r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <InsertCommentIcon />\r\n                <TextField\r\n                  id=\"standard-multiline-flexible\"\r\n                  label=\"add comment\"\r\n                  className={classes.commentBox}\r\n                  multiline\r\n                  rowsMax={4} \r\n                  value={postComment}\r\n                  onChange={handleCommentChange}\r\n                />\r\n                <SpinnerButton buttonProps = {{\r\n                  'text': 'Save',\r\n                  'onClick':  postSaveComment,\r\n                  'loading' : postCommentLoading\r\n                  }}\r\n                />\r\n            </CardActions> \r\n          </Card>  \r\n        </form>\r\n      );  \r\n    }\r\n\r\n    /**\r\n     * Get save and edit button markup for title\r\n     */\r\n    const titleCrudButtonMarkup = () => {  \r\n      if (!userContextValue.isLoggedIn()) {\r\n        return null;\r\n      }\r\n\r\n      // show edit functionality\r\n      return (\r\n        <ButtonGroup \r\n          type=\"submit\"\r\n          color=\"primary\" \r\n          aria-label=\"outlined primary button group\" \r\n          className={classes.crudButtons}>\r\n            {\r\n              !editClicked \r\n              ?  <IconButton aria-label=\"edit\" onClick={()=>setEditClicked(!editClicked)}><EditIcon /></IconButton>       \r\n              :  <IconButton aria-label=\"save\" onClick={()=> postSave()} color=\"primary\"><SaveIcon /></IconButton>      \r\n            } \r\n        </ButtonGroup>\r\n      );\r\n    };\r\n\r\n    const getReadOnlyForm = () => {\r\n      return (\r\n        <Card  > \r\n          <CardHeader\r\n              className={classes.contactHeader}\r\n              title={\r\n                <React.Fragment>\r\n                  <Typography variant=\"h3\">{item.title}</Typography>     \r\n                  <Typography variant=\"h6\">{item.subTitle}</Typography>    \r\n                </React.Fragment> \r\n              }  \r\n              action={titleCrudButtonMarkup()}\r\n          /> \r\n          <CardContent>  \r\n            <div id=\"container\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: props.item.content\r\n              }}>\r\n            </div> \r\n          </CardContent>\r\n          <CardActions className={classes.cardActions}>\r\n              <InsertCommentIcon />\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"add comment\"\r\n                className={classes.commentBox}\r\n                multiline\r\n                rowsMax={4} \r\n                value={postComment}\r\n                onChange={handleCommentChange}\r\n              />\r\n              <SpinnerButton buttonProps = {{\r\n                'text': 'Save',\r\n                'onClick':  postSaveComment,\r\n                'loading' : postCommentLoading\r\n                }}\r\n              />\r\n          </CardActions> \r\n        </Card>  \r\n      );     \r\n    } \r\n\r\n    /**\r\n     * Invoke save method that will call the parent save\r\n     * parent save will invoke the api\r\n     */\r\n    const postSave = () => {    \r\n      // Get post data \r\n      let postData = { \r\n        ...props.item, \r\n        title:formik.values.title,\r\n        subTitle: formik.values.subTitle,\r\n        content: props.item.newContent ? props.item.newContent: props.item.content \r\n      }; \r\n      const isSuccess = blogContext.save(props.item[\"_id\"],postData);\r\n      if (isSuccess) {\r\n        setEditClicked(!editClicked);\r\n      } \r\n    }\r\n\r\n    const postSaveComment = () => {\r\n      setPostCommentLoading(true);\r\n      const isSuccess = blogContext.saveComment(props.item[\"_id\"],{ \r\n        _id: props.item[\"_id\"],\r\n        text: postComment\r\n      });\r\n      setPostCommentLoading(false);\r\n    }\r\n\r\n    /**\r\n     * Function to change post comment (controlled)\r\n     * @param {*} e comment event\r\n     */\r\n    const handleCommentChange = (e) => {\r\n      setPostComment(e.target.value);\r\n    }  \r\n \r\n    const getPostCard = () => {  \r\n      return (  \r\n        <div className={classes.wrapper}>\r\n          <div className={classes.card}> \r\n            {\r\n              editClicked\r\n              ? getForm()\r\n              : getReadOnlyForm()\r\n            }            \r\n          </div>   \r\n        </div> \r\n      );\r\n    }  \r\n\r\n    return(  \r\n      <React.Fragment key={props.item.timeStamp}> \r\n        {getPostCard(props.item)} \r\n      </React.Fragment>\r\n    );   \r\n}\r\n\r\nexport default BlogPost;","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\Blog.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\skeletons\\SkeletonBlogPost.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\context\\BlogContext.js",["154"],"import React, { useEffect, useState, useContext } from 'react'; \r\nimport axiosConfig from '../apis/axiosConfig';\r\nimport UserContext from './UserContext';\r\n\r\nconst initialState = {\r\n  // Default empty function\r\n  posts: null,\r\n  error: false, \r\n  retry: ()=>{},\r\n  save: ()=>{},\r\n  addNewBlog: ()=>{},\r\n  saveComment: ()=>{} \r\n};\r\n\r\nconst BlogContext = React.createContext(initialState);\r\n\r\nexport const BlogProvider = ({children}) => {\r\n  const userContextValue = useContext(UserContext);\r\n  const [blogs, setBlogs] = useState(null);\r\n\r\n  useEffect(() => { \r\n    fetchBlogData(); \r\n  }, [])\r\n\r\n  async function fetchBlogData() { \r\n    let posts = null;\r\n    let error = false; \r\n    try {\r\n      let response = await axiosConfig.get('/post'); \r\n      posts=response.data; \r\n    } catch(err) {\r\n      error = true;\r\n    } \r\n\r\n    setBlogs({\r\n      posts,\r\n      error\r\n    });\r\n  }  \r\n\r\n  const save = async (id,blogData) => { \r\n    if (id){\r\n      blogData[\"_id\"] = id;\r\n    } \r\n\r\n    try {\r\n      await axiosConfig.put('/post',{\r\n        ...blogData,\r\n        token: userContextValue.token\r\n      });\r\n      \r\n      // Reset state\r\n      let { posts } = { ...blogs };  \r\n      let currentPostIndex = posts.findIndex(f=>f._id === `${id}`);\r\n      if (currentPostIndex>=0) {   \r\n        // Set content and titles\r\n        posts.splice(currentPostIndex,1,blogData);\r\n        setBlogs({\r\n          posts,\r\n          error: false\r\n        });\r\n      } \r\n\r\n      // Reset value \r\n      return true;\r\n    } catch (err) {\r\n      // Don't do anything\r\n      console.error(err);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  const addNewBlog = async (id,comment) => { \r\n    try {\r\n      // Create a empty item\r\n      const newItem = {  \r\n        title:'',\r\n        subTitle: '',\r\n        content: 'Enter text' \r\n      }; \r\n      let { posts } = { ...blogs };   \r\n      posts.unshift(newItem);\r\n      setBlogs({\r\n        posts,\r\n        error: false\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      // Don't do anything\r\n      console.error(err);\r\n      return false;\r\n    } \r\n  }\r\n\r\n  const saveComment = async (id,comment) => {\r\n    try {\r\n      const response = await axiosConfig.patch('/post',  comment );\r\n      return true;\r\n    } catch (err) {\r\n      // Don't do anything\r\n      console.error(err);\r\n      return false;\r\n    } \r\n  }\r\n\r\n  const retryFetchBlog = () =>  fetchBlogData(); \r\n\r\n  return (\r\n    <BlogContext.Provider value={{\r\n      ...blogs,\r\n      retry: retryFetchBlog,\r\n      addNewBlog,\r\n      save,\r\n      saveComment      \r\n    }} >\r\n      {children}\r\n    </BlogContext.Provider>\r\n  )\r\n};\r\n \r\nexport default BlogContext;","C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\projects\\useProjectStyles.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\blog\\useBlogStyles.js",[],"C:\\Projects\\poc\\pers\\profile\\site\\site-react\\src\\common\\components\\experience\\useExperienceStyles.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":11,"column":10,"nodeType":"161","messageId":"162","endLine":11,"endColumn":24},{"ruleId":"159","severity":1,"message":"163","line":11,"column":26,"nodeType":"161","messageId":"162","endLine":11,"endColumn":36},{"ruleId":"159","severity":1,"message":"164","line":11,"column":38,"nodeType":"161","messageId":"162","endLine":11,"endColumn":51},{"ruleId":"159","severity":1,"message":"165","line":12,"column":8,"nodeType":"161","messageId":"162","endLine":12,"endColumn":12},{"ruleId":"166","severity":1,"message":"167","line":23,"column":5,"nodeType":"168","endLine":23,"endColumn":7,"suggestions":"169"},{"ruleId":"159","severity":1,"message":"170","line":30,"column":19,"nodeType":"161","messageId":"162","endLine":30,"endColumn":29},{"ruleId":"159","severity":1,"message":"163","line":1,"column":26,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"164","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":51},{"ruleId":"159","severity":1,"message":"171","line":2,"column":10,"nodeType":"161","messageId":"162","endLine":2,"endColumn":15},{"ruleId":"159","severity":1,"message":"172","line":2,"column":17,"nodeType":"161","messageId":"162","endLine":2,"endColumn":23},{"ruleId":"159","severity":1,"message":"173","line":2,"column":24,"nodeType":"161","messageId":"162","endLine":2,"endColumn":27},{"ruleId":"159","severity":1,"message":"174","line":188,"column":13,"nodeType":"161","messageId":"162","endLine":188,"endColumn":22},{"ruleId":"159","severity":1,"message":"175","line":97,"column":13,"nodeType":"161","messageId":"162","endLine":97,"endColumn":21},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'dark' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'modifyNameAndToken'. Either include it or remove the dependency array.","ArrayExpression",["178"],"'setSuccess' is assigned a value but never used.","'green' is defined but never used.","'purple' is defined but never used.","'red' is defined but never used.","'isSuccess' is assigned a value but never used.","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},"Update the dependencies array to be: [modifyNameAndToken]",{"range":"181","text":"182"},[567,569],"[modifyNameAndToken]"]