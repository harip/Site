[{"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/index.js":"1","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/App.js":"2","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/context/UserContext.js":"3","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/context/ProfileContext.js":"4","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/projects/Projects.js":"5","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/resume/Resume.js":"6","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/pthonds/PythonDs.js":"7","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/skills/SkillCloud.js":"8","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/myposts/ReadOnlyPosts.js":"9","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/FloatingActions.js":"10","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/navbar/NavBar.js":"11","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/skills/SkillSearch.js":"12","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/context/PostContext.js":"13","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/experience/Experience.js":"14","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/resume-service.js":"15","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/feedback-service.js":"16","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/Feedback.js":"17","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/navbar/SwipeableTemporaryDrawer.js":"18","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/contact/Contact.js":"19","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/errordialog/ErrorDialog.js":"20","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/myposts/Posts.js":"21","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/signin/SignIn.js":"22","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/experience/Project.js":"23","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/apis/axiosConfig.js":"24","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/signin/SignInService.js":"25","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/controls/SpinnerButton.js":"26","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/skeletons/SkeletonPost.js":"27","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/myposts/Post.js":"28","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/myposts/PostService.js":"29","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/editor/TextEditor.js":"30"},{"size":124,"mtime":1612022681529,"results":"31","hashOfConfig":"32"},{"size":1367,"mtime":1613318151802,"results":"33","hashOfConfig":"32"},{"size":1197,"mtime":1613323943038,"results":"34","hashOfConfig":"32"},{"size":459,"mtime":1612022681528,"results":"35","hashOfConfig":"32"},{"size":3681,"mtime":1612931321821,"results":"36","hashOfConfig":"32"},{"size":536,"mtime":1612022681529,"results":"37","hashOfConfig":"32"},{"size":275,"mtime":1612022681529,"results":"38","hashOfConfig":"32"},{"size":2628,"mtime":1612930900222,"results":"39","hashOfConfig":"32"},{"size":454,"mtime":1613319397006,"results":"40","hashOfConfig":"32"},{"size":4754,"mtime":1613711854615,"results":"41","hashOfConfig":"32"},{"size":5384,"mtime":1613966630344,"results":"42","hashOfConfig":"32"},{"size":1367,"mtime":1612022681529,"results":"43","hashOfConfig":"32"},{"size":886,"mtime":1613967217502,"results":"44","hashOfConfig":"32"},{"size":2125,"mtime":1612931141380,"results":"45","hashOfConfig":"32"},{"size":962,"mtime":1612926999694,"results":"46","hashOfConfig":"32"},{"size":213,"mtime":1612654829147,"results":"47","hashOfConfig":"32"},{"size":1717,"mtime":1612654829147,"results":"48","hashOfConfig":"32"},{"size":3807,"mtime":1613319318588,"results":"49","hashOfConfig":"32"},{"size":4211,"mtime":1612928372818,"results":"50","hashOfConfig":"32"},{"size":1298,"mtime":1613283775629,"results":"51","hashOfConfig":"32"},{"size":2119,"mtime":1613966350066,"results":"52","hashOfConfig":"32"},{"size":4347,"mtime":1613966296897,"results":"53","hashOfConfig":"32"},{"size":712,"mtime":1612931050201,"results":"54","hashOfConfig":"32"},{"size":126,"mtime":1612926999693,"results":"55","hashOfConfig":"32"},{"size":221,"mtime":1613283624381,"results":"56","hashOfConfig":"32"},{"size":1419,"mtime":1613703121527,"results":"57","hashOfConfig":"32"},{"size":2483,"mtime":1613966430688,"results":"58","hashOfConfig":"32"},{"size":7045,"mtime":1613703121527,"results":"59","hashOfConfig":"32"},{"size":330,"mtime":1613704519331,"results":"60","hashOfConfig":"32"},{"size":1022,"mtime":1613712089664,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"t412hd",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/index.js",[],["126","127"],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/App.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/context/UserContext.js",["128"],"import React, { useEffect, useState } from 'react'; \n\nconst defaultProviderValue = {\n  user: 'Guest',\n  token: '',\n  modifyNameAndToken: ()=> {},\n  isLoggedIn: ()=> {},\n  logout: ()=> {}\n};\n\nconst UserContext = React.createContext(defaultProviderValue);\n\nexport const UserContextProvider = ({children}) => {\n  const [name, setName] = useState(defaultProviderValue);\n\n  useEffect(() => {\n    let token = localStorage.getItem('token');\n    token = token ? token : \"\";\n    \n    if (token !== \"\"){\n      modifyNameAndToken('admin',token);\n    }\n  },[]); \n\n  const modifyNameAndToken = (user,token) => { \n    setName({ ...name, \n      user: user,\n      token:  token\n    }); \n  };\n\n  const isLoggedIn = () => {\n    const isAdminAndLoggedIn =  name.user.toUpperCase() === 'ADMIN' &&  name.token  && name.token !== \"null\"\n    return isAdminAndLoggedIn;\n  }\n\n  const logout = () => {\n    setName({ ...name, \n      user: 'Guest',\n      token:  ''\n    }); \n    localStorage.setItem('token',\"\");\n  }\n\n  return(\n    <UserContext.Provider value={{\n      ...name,\n      modifyNameAndToken,\n      isLoggedIn,\n      logout\n    }}>\n      {children}\n    </UserContext.Provider> \n  );\n};\n\nexport default UserContext;","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/context/ProfileContext.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/projects/Projects.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/resume/Resume.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/pthonds/PythonDs.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/skills/SkillCloud.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/myposts/ReadOnlyPosts.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/FloatingActions.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/navbar/NavBar.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/skills/SkillSearch.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/context/PostContext.js",["129"],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/experience/Experience.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/resume-service.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/feedback-service.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/floatingactions/Feedback.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/navbar/SwipeableTemporaryDrawer.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/contact/Contact.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/errordialog/ErrorDialog.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/myposts/Posts.js",["130"],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/signin/SignIn.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/experience/Project.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/apis/axiosConfig.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/signin/SignInService.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/controls/SpinnerButton.js",["131"],"import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button'; \nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core'; \nimport { green } from '@material-ui/core/colors'; \n\nconst useStyles= makeStyles((theme)=>({\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    marginTop: -12,\n    marginLeft: -12,\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700],\n    },\n  },wrapper: {\n    margin: theme.spacing(1),\n    position: 'relative',\n  },\n}));\n\nconst SpinnerButton = ( {buttonProps} ) => {\n  const { text, onClick, loading } = buttonProps; \n  const [success, setSuccess] = useState(false);\n  const classes = useStyles(); \n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n  });\n\n  const onButtonClick = () => { \n    // Parent has the functionality of onclick\n    onClick();\n  }\n\n  return (\n    <div className={classes.wrapper}>\n      <Button \n        color=\"primary\" \n        variant=\"contained\" \n        className={buttonClassname}\n        disabled={loading}\n        onClick={onButtonClick}>\n        {text}\n      </Button>\n      {\n        loading && \n        <CircularProgress size={24} className={classes.buttonProgress} />\n      }\n    </div>\n  )\n}\n\nexport  default SpinnerButton;","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/skeletons/SkeletonPost.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/myposts/Post.js",["132"],"import React, { useState,useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader'; \nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';  \nimport Typography from '@material-ui/core/Typography'; \nimport TextEditor from '../editor/TextEditor';\nimport { ButtonGroup, IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TextField from '@material-ui/core/TextField';  \nimport UserContext from '../../../context/UserContext';\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\nimport SpinnerButton from '../controls/SpinnerButton';\n\nconst useStyles= makeStyles( (theme)=> ({\n    root: {\n      margin: 10,\n      display: 'flex',\n      justifyContent: 'center',\n      alignContent: 'center',\n      flexWrap: 'wrap',\n      listStyle: 'none',\n      padding: theme.spacing(0.5)  \n    },\n    contactHeader: {\n      fontSize: 20,\n      borderBottom: 2,\n      background: '#ffa602'\n    },\n    card: {\n        marginRight: 5,\n        marginBottom: 5\n    },\n    cardActions: {\n      borderTop: 'solid 1px #f9f5ee'\n    },\n    crudButtons : {\n      marginLeft: 'auto'\n    },\n    wrapper: {\n      margin: theme.spacing(1),\n      position: 'relative',\n    },\n    commentBox: {\n      width: '100%'\n    },\n  }));\n\nconst Post = (props) => {   \n    const userContextValue = useContext(UserContext);\n    const classes = useStyles();\n    const [postTitle, setPostTitle] = useState(props.item.title);\n    const [titleEdit, setTitleEdit] = useState(true);\n    const [loading, setLoading] = React.useState(true);\n    const [showCommentBox, setShowCommentBox] = React.useState(false);\n\n    const [postComment, setPostComment] = useState('');\n    const [postCommentLoading, setPostCommentLoading] = useState(false);\n  \n    // Parent events\n    const {savePost,saveComment} = props;\n \n    /**\n     * Function that renders the title markup edit mode or readonly mode\n     * @param {*} item current item that is being edited\n     */\n    const cardTitle = (item) => { \n      return (\n        <div>  \n          {\n            !titleEdit\n            ?  \n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"postTitle\"\n                label=\"title\"\n                type=\"text\"\n                fullWidth\n                value={postTitle}\n                onChange={handleChange}\n              />                 \n            :  <Typography>{item.title}</Typography>     \n          }  \n        </div>\n      );\n    } \n\n    /**\n     * Function to change title (controlled)\n     * @param {*} e title event\n     */\n    const handleChange = (e) => {\n      setPostTitle(e.target.value);\n    }\n\n    /**\n     * Function that will enable editing content\n     */\n    const renderContent = () => {\n      return (\n        <React.Fragment>\n          {\n            !titleEdit \n            ?  <TextEditor post={props.item} /> \n            :  \n              <div\n              dangerouslySetInnerHTML={{\n                __html: props.item.content\n              }}></div>\n          }\n        </React.Fragment>\n      );\n    } \n\n    const onTitleEdit = () => {\n      setTitleEdit(false)\n    }\n\n    /**\n     * Invoke save method that will call the parent save\n     * parent save will invoke the api\n     */\n    const postSave = () => { \n      // Get post data\n      const postData = {\n        title: postTitle,\n        content: props.item.newContent,\n        token: userContextValue.token\n      };\n\n      if (props.item[\"_id\"]){\n        postData[\"_id\"] = props.item[\"_id\"];\n      } \n      \n      setTitleEdit(true);  \n      savePost(props.item, postData, (status)=>{\n        if (status) {\n          setTitleEdit(true);  \n        }\n      });\n    }\n\n    const postSaveComment = () => {\n      setPostCommentLoading(true);\n      // Get post data\n      const commentData = { \n        text: postComment\n      };\n\n      if (props.item[\"_id\"]){\n        commentData[\"_id\"] = props.item[\"_id\"];\n      } \n\n      saveComment(commentData, ()=> {\n        setPostCommentLoading(false);\n      })\n    }\n\n    /**\n     * Function to change post comment (controlled)\n     * @param {*} e comment event\n     */\n    const handleCommentChange = (e) => {\n      setPostComment(e.target.value);\n    } \n    \n    /**\n     * Get save and edit button markup for title\n     */\n    const titleCrudButtonMarkup = () => {  \n      if (!userContextValue.isLoggedIn()) {\n        return null;\n      }\n\n      // show edit functionality\n      return (\n        <ButtonGroup \n          color=\"primary\" \n          aria-label=\"outlined primary button group\" \n          className={classes.crudButtons}>\n            {\n              titleEdit \n              ?  <IconButton aria-label=\"edit\" onClick={onTitleEdit}><EditIcon /></IconButton>       \n              :  <IconButton aria-label=\"save\" onClick={ ()=> postSave()} color=\"primary\"><SaveIcon /></IconButton>      \n            } \n        </ButtonGroup>\n      );\n    };\n\n    const getPostCard = (item) => {  \n        return (  \n          <div className={classes.wrapper} disabled={loading}>\n            <div className={classes.card}>\n                <Card  > \n                    <CardHeader\n                        className={classes.contactHeader}\n                        title={\n                          cardTitle(item)\n                        }  \n                        action={titleCrudButtonMarkup()}\n                    /> \n                    <CardContent> \n                        <div id=\"container\">\n                            {renderContent()}\n                        </div>\n                    </CardContent>\n                    <CardActions disableSpacing className={classes.cardActions}>\n                        <IconButton aria-label=\"add comment\" onClick={()=> setShowCommentBox(!showCommentBox)} >\n                          <InsertCommentIcon />\n                        </IconButton>  \n                        <TextField\n                          id=\"standard-multiline-flexible\"\n                          label=\"add comment\"\n                          className={classes.commentBox}\n                          multiline\n                          rowsMax={4} \n                          value={postComment}\n                          onChange={handleCommentChange}\n                        />\n                        <SpinnerButton buttonProps = {{\n                          'text': 'Save',\n                          'onClick':  postSaveComment,\n                          'loading' : postCommentLoading\n                          }}\n                        />\n                    </CardActions> \n                </Card> \n            </div>   \n          </div> \n        );\n    }  \n\n    return(  \n        <React.Fragment key={props.item.timeStamp}>\n            {getPostCard(props.item)} \n            </React.Fragment>\n      );   \n}\n\nexport default Post;","/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/myposts/PostService.js",[],"/Users/harip/Documents/Hari/Projects/poc/profile/site/site-react/src/common/components/editor/TextEditor.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":23,"column":5,"nodeType":"139","endLine":23,"endColumn":7,"suggestions":"140"},{"ruleId":"137","severity":1,"message":"141","line":18,"column":6,"nodeType":"139","endLine":18,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":54,"column":11,"nodeType":"145","messageId":"146","endLine":54,"endColumn":30},{"ruleId":"143","severity":1,"message":"147","line":30,"column":19,"nodeType":"145","messageId":"146","endLine":30,"endColumn":29},{"ruleId":"143","severity":1,"message":"148","line":56,"column":21,"nodeType":"145","messageId":"146","endLine":56,"endColumn":31},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'modifyNameAndToken'. Either include it or remove the dependency array.","ArrayExpression",["151"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["152"],"no-unused-vars","'commentSaveResponse' is assigned a value but never used.","Identifier","unusedVar","'setSuccess' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [modifyNameAndToken]",{"range":"157","text":"158"},"Update the dependencies array to be: [fetchData]",{"range":"159","text":"160"},[545,547],"[modifyNameAndToken]",[405,407],"[fetchData]"]